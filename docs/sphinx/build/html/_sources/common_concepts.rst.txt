.. easy_manipulation_deployment documentation master file, created by
   sphinx-quickstart on Thu Oct 22 11:03:35 2020.
   You can adapt this file completely to your liking, but it should at least
   contain the root `toctree` directive.

.. _common_concepts:

Common Concepts
========================================================

The following highlights some common concepts and definitions that might be useful to know for new users

.. contents:: 
    :depth: 3

YAML
^^^^^^^^^^
YAML (YAML Ain't Markup Language) is a human-readable format for storing data. This is highly used in this package to provide a more understandable description of the scene that can be parsed into URDF files and to be reloaded into the GUI when needed.

`More information about the YAML format <https://yaml.org/>`_


URDF
^^^^^^^^^^

A URDF (Universal Robot Description Format) file is a file that describes the physical attributes of a robot which will be used by the package

`More information about the URDF format <http://wiki.ros.org/urdf>`_

`URDF tutorials <http://wiki.ros.org/urdf/Tutorials>`_

SRDF
^^^^^^^^^^

A SRDF (Semantic Robot Description Format) file represents the semantic information of the robot that is not typically included in the robot URDF file 

`More information about the SRDF format <http://wiki.ros.org/srdf>`_


Moveit_Config Folders
^^^^^^^^^^^^^^^^^^^^^^

This is a folder that is typically generated by the `Moveit Setup Assistant <http://docs.ros.org/en/melodic/api/moveit_tutorials/html/doc/setup_assistant/setup_assistant_tutorial.html>`_ which includes many files that are required for integration with Moveit. This is also where the srdf is stored. These folders are needed for Robots and End Effectors

For a robot named <robot_name> the folder should be named `<robot_name>_moveit_config`

This is the general struction for a typical moveit_config folder

.. code-block:: bash

   |--robot_moveit_config
   ___|--config
   ______|--fake_controllers.yaml
   ______|--robot.srdf.xacro
   ______|.....other files
   ___|--launch
   .....other files

Description Folders
^^^^^^^^^^^^^^^^^^^^^

This folder typically contains the URDF files and the 3D meshes of the object. A description folder is needed not just for robots and end effectors, but also for other static models in the scene.

An object with the name <object_name> will have the description folder named <object_name>_description.

This is the general struction for a typical description folder

.. code-block:: bash

   |--object_name_description
   ___|--urdf
   ______|--object_name.urdf.xacro
   ___|--meshes
   ______|--collision
   _________|--object_collision.stl
   ______|--visual
   _________|--object_visual.stl


Workcell
^^^^^^^^^^

An environment that involves a robot doing tasks

Scenes
^^^^^^^

The visual description of a workcell.  This term essentially is interchangeable with a Workcell. However, Scenes and Workcell provides a more all encompassing and understandable term.


Assets
^^^^^^^

Represents all visual elements in the scene. This can be split into Robots, End effectors, and Environment Objects

Robots
--------

Any robotic manipulator required for the tasks. 


End Effectors
---------------

Any end effector attached to the robot. Currently the Grasp Planner only supports a single suction cup gripper and a 2 finger gripper.


Environment Objects
---------------------

Any other objects that are required in the scene. This includes any tables, boxes, etc that you need added to the scene as static obstacles.

